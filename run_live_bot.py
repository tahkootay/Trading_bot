#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Live Trading Bot —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏.
–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: WebSocket, –∞–Ω—Å–∞–º–±–ª—å –º–æ–¥–µ–ª–µ–π, —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent / "src"))

from src.live_trading_bot import LiveTradingBot, BotConfig


def get_bot_config() -> BotConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏."""
    return BotConfig(
        # –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        symbol="SOL/USDT:USDT",  # –§—å—é—á–µ—Ä—Å—ã –∫–∞–∫ –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
        timeframe="5",  # 5-–º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏
        
        # API –∫–ª—é—á–∏ Bybit (–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏)
        bybit_api_key="",  # –í–∞—à API –∫–ª—é—á
        bybit_api_secret="",  # –í–∞—à API —Å–µ–∫—Ä–µ—Ç
        bybit_testnet=True,  # True = testnet, False = mainnet
        
        # ML –º–æ–¥–µ–ª–∏ (–∞–Ω—Å–∞–º–±–ª—å –∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        models_dir="models/ensemble_live",
        min_confidence=0.65,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏
        prediction_cooldown=60,  # –°–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è–º–∏
        
        # –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç (–∫–∞–∫ –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        max_position_size_usd=100.0,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
        max_total_exposure_usd=500.0,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è
        max_daily_loss_usd=50.0,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–Ω–µ–≤–Ω–∞—è –ø–æ—Ç–µ—Ä—è
        stop_loss_pct=0.02,  # Stop-loss 2%
        take_profit_pct=0.04,  # Take-profit 4%
        min_trade_interval_sec=300,  # 5 –º–∏–Ω—É—Ç –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏
        
        # –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        initial_balance=1000.0,
        dry_run=True,  # –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ False –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏
        log_level="INFO"
    )


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    print("=" * 60)
    print("ü§ñ LIVE CRYPTO TRADING BOT —Å –ê–ù–°–ê–ú–ë–õ–ï–ú ML-–ú–û–î–ï–õ–ï–ô")
    print("=" * 60)
    print("üìã –°–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    print("   ‚Ä¢ –ê–Ω—Å–∞–º–±–ª—å: Random Forest + LightGBM + XGBoost + CatBoost")
    print("   ‚Ä¢ –ú–µ—Ç–∞–º–æ–¥–µ–ª—å: Logistic Regression") 
    print("   ‚Ä¢ –ü—Ä–∏–∑–Ω–∞–∫–∏: MA5/10/20, RSI, MACD, Bollinger Bands, Volume change")
    print("   ‚Ä¢ Live –¥–∞–Ω–Ω—ã–µ: WebSocket Bybit —Ñ—å—é—á–µ—Ä—Å—ã")
    print("   ‚Ä¢ –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç: Stop-loss, Take-profit, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = get_bot_config()
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"üéØ –°–∏–º–≤–æ–ª: {config.symbol}")
    print(f"‚è±Ô∏è  –¢–∞–π–º—Ñ—Ä–µ–π–º: {config.timeframe} –º–∏–Ω—É—Ç")
    print(f"üîÑ –†–µ–∂–∏–º: {'DRY RUN (—Å–∏–º—É–ª—è—Ü–∏—è)' if config.dry_run else 'LIVE TRADING (—Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏!)'}")
    print(f"üß† –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {config.min_confidence}")
    print(f"üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: ${config.max_position_size_usd}")
    print(f"üõ°Ô∏è  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–Ω–µ–≤–Ω–∞—è –ø–æ—Ç–µ—Ä—è: ${config.max_daily_loss_usd}")
    print("=" * 60)
    
    if not config.dry_run and (not config.bybit_api_key or not config.bybit_api_secret):
        print("‚ùå –û–®–ò–ë–ö–ê: –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å API –∫–ª—é—á–∏ Bybit!")
        print("   –ó–∞–ø–æ–ª–Ω–∏—Ç–µ bybit_api_key –∏ bybit_api_secret –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        bot = LiveTradingBot(config)
        
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
        print("üéØ –ù–∞—á–∏–Ω–∞–µ–º live —Ç–æ—Ä–≥–æ–≤–ª—é...")
        print("üìä –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è graceful –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("=" * 60)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await bot.start()
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        if 'bot' in locals():
            print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...")
            await bot.stop()
        print("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


if __name__ == "__main__":
    print("ü§ñ –ó–∞–ø—É—Å–∫ Live Trading Bot...")
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")